# -*- coding: utf-8 -*-
"""hateSpeech1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z2nCTmpbez8leBkwJnACL64yAFq--3Mm
"""

import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier

import nltk
nltk.download('stopwords')
import re
from nltk.util import pr
stemmer = nltk.SnowballStemmer("english")
from nltk.corpus import stopwords
import string
stopword=set(stopwords.words("english"))

print(stopwords.words('english'))

path="/content/twitter_data (1).csv"
df = pd.read_csv(path)
print(df.head())

df['labels']=df['class'].map({0:" Hate Speech ",1:"Offensive speech",2:" No Hate and Offensive speech"})
print(df.head())

df=df[['tweet','labels']]
df.head()

def clean(text):
   text = str(text).lower()
   text = re.sub('\[.*?\]','', text)
   text = re.sub('https?://\S+|www\.\S+', '', text)
   text = re.sub('<.*?>+', '', text)
   text = re.sub('[%s]' % re.escape(string.punctuation), '', text)
   text = re.sub('\n', '', text)
   text = re.sub('\w*\d\w*', '', text)
   text = [word for word in text.split(' ') if word not in stopword]
   text =" ".join(text)
   text = [stemmer.stem(word) for word in text.split(' ')]
   text =" ".join(text)
   return text
df["tweet"] = df["tweet"].apply(clean)
print(df.head())

df.dropna(inplace=True)

"""Text Preprocessing"""

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()

df['labels'] = le.fit_transform(df['labels'])

x=np.array(df["tweet"])
y=np.array(df["labels"])
cv = CountVectorizer()
x = cv.fit_transform(x)
X_train, X_test, y_train, y_test = train_test_split(x,y, test_size=0.33, random_state=42)
clf = DecisionTreeClassifier()
clf.fit(X_train,y_train)
y_pred=clf.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,y_pred))

test_data="you are good "
df=cv.transform([test_data]).toarray()
print(clf.predict(df))